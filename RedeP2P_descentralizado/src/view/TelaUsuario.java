/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCartorio;
import controller.ControllerDocumento;
import controller.ControllerPessoa;
import controller.ControllerRede;
import java.awt.CardLayout;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Documento;
import model.ValidarCNPJ;
import model.ValidarCPF;
import serverAndClient.Client;
import serverAndClient.Servidor;

/**
 *
 * @author gabriel
 */
public class TelaUsuario extends javax.swing.JFrame {   
    /**
     * Atributo responsável pelo envio de dados.
     */
    private ControllerRede rede;
    
    private ControllerCartorio control=  new ControllerCartorio();
    
    private Servidor servidor; //servidor do cliente
    
    /**
     * Creates new form TelaUsuario
     */
    public TelaUsuario() throws IOException {
        initComponents();
        setMenuPrincipal(false);
        rede = new ControllerRede();
        conectarComCartorio(); //método que se conecta com todos os cartórios.
        this.servidor = new Servidor(1840);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        telaUser = new javax.swing.JPanel();
        telaLogin = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        ass_digitalPessoa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        senhaPessoa = new javax.swing.JPasswordField();
        buttonAcessar = new javax.swing.JButton();
        telaCadastroPessoa = new javax.swing.JButton();
        telaCadastro = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nomePessoa = new javax.swing.JTextField();
        CpfPessoa = new javax.swing.JTextField();
        assDigital = new javax.swing.JTextField();
        cnpjPessoa = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cadPessoaFisica = new javax.swing.JButton();
        cadPessoaJuridica = new javax.swing.JButton();
        voltarLogin = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        senha = new javax.swing.JPasswordField();
        telaInicial = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        UploadFiles = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        OpenFile = new javax.swing.JButton();
        chooseFile = new javax.swing.JTextField();
        uploadFile = new javax.swing.JButton();
        DownloadFiles = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDocs = new javax.swing.JTable();
        downloadDoc = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        menuPrincipal = new javax.swing.JMenuBar();
        optionsFiles = new javax.swing.JMenu();
        uploadFiles = new javax.swing.JMenuItem();
        downloadFiles = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenu();
        logoutUser = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Cartórios");
        setResizable(false);

        telaUser.setLayout(new java.awt.CardLayout());

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel4.setText("Login");

        ass_digitalPessoa.setText(" ");

        jLabel5.setText("Assinatura Digital");

        jLabel6.setText("Senha");

        buttonAcessar.setFont(new java.awt.Font("Abyssinica SIL", 3, 15)); // NOI18N
        buttonAcessar.setText("Acessar");
        buttonAcessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAcessarActionPerformed(evt);
            }
        });

        telaCadastroPessoa.setFont(new java.awt.Font("Abyssinica SIL", 3, 15)); // NOI18N
        telaCadastroPessoa.setText("Novo Cadastro");
        telaCadastroPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telaCadastroPessoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout telaLoginLayout = new javax.swing.GroupLayout(telaLogin);
        telaLogin.setLayout(telaLoginLayout);
        telaLoginLayout.setHorizontalGroup(
            telaLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaLoginLayout.createSequentialGroup()
                .addGroup(telaLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(telaLoginLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(telaLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addGroup(telaLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(senhaPessoa, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ass_digitalPessoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, telaLoginLayout.createSequentialGroup()
                                    .addComponent(buttonAcessar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(telaCadastroPessoa)))))
                    .addGroup(telaLoginLayout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jLabel4)))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        telaLoginLayout.setVerticalGroup(
            telaLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaLoginLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ass_digitalPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(senhaPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(telaLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAcessar)
                    .addComponent(telaCadastroPessoa))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        telaUser.add(telaLogin, "telaLogin");

        jLabel7.setFont(new java.awt.Font("Abyssinica SIL", 3, 18)); // NOI18N
        jLabel7.setText("Cadastro de Pessoas");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel8.setText("Pessoa Física:");

        jLabel9.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel9.setText("Pessoa Jurídica:");

        jLabel10.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel10.setText("Nome:");

        jLabel11.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel11.setText("CPF:");

        jLabel12.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel12.setText("Ass. Digital:");

        jLabel14.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel14.setText("CNPJ:");

        cadPessoaFisica.setText("Cadastrar Pessoa Física");
        cadPessoaFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadPessoaFisicaActionPerformed(evt);
            }
        });

        cadPessoaJuridica.setText("Cadastrar Pessoa Jurídica");
        cadPessoaJuridica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadPessoaJuridicaActionPerformed(evt);
            }
        });

        voltarLogin.setFont(new java.awt.Font("Abyssinica SIL", 3, 15)); // NOI18N
        voltarLogin.setText("Voltar");
        voltarLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarLoginActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Abyssinica SIL", 3, 15)); // NOI18N
        jLabel16.setText("Senha:");

        javax.swing.GroupLayout telaCadastroLayout = new javax.swing.GroupLayout(telaCadastro);
        telaCadastro.setLayout(telaCadastroLayout);
        telaCadastroLayout.setHorizontalGroup(
            telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaCadastroLayout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(telaCadastroLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, telaCadastroLayout.createSequentialGroup()
                        .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(telaCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(CpfPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(telaCadastroLayout.createSequentialGroup()
                                    .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel16))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(nomePessoa, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                        .addComponent(assDigital, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                        .addComponent(senha)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, telaCadastroLayout.createSequentialGroup()
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                    .addComponent(cnpjPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(voltarLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                        .addGap(36, 36, 36))
                    .addGroup(telaCadastroLayout.createSequentialGroup()
                        .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(telaCadastroLayout.createSequentialGroup()
                                .addComponent(cadPessoaJuridica)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cadPessoaFisica)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        telaCadastroLayout.setVerticalGroup(
            telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(voltarLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(assDigital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(senha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(CpfPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cnpjPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(telaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(telaCadastroLayout.createSequentialGroup()
                        .addComponent(cadPessoaJuridica)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, telaCadastroLayout.createSequentialGroup()
                        .addComponent(cadPessoaFisica)
                        .addGap(29, 29, 29))))
        );

        telaUser.add(telaCadastro, "telaCadastro");

        jLabel2.setFont(new java.awt.Font("Abyssinica SIL", 3, 36)); // NOI18N
        jLabel2.setText("Sistema de Cartórios");

        jLabel3.setFont(new java.awt.Font("Abyssinica SIL", 3, 24)); // NOI18N
        jLabel3.setText("Para gerência de arquivos");

        javax.swing.GroupLayout telaInicialLayout = new javax.swing.GroupLayout(telaInicial);
        telaInicial.setLayout(telaInicialLayout);
        telaInicialLayout.setHorizontalGroup(
            telaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaInicialLayout.createSequentialGroup()
                .addGroup(telaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(telaInicialLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel3))
                    .addGroup(telaInicialLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel2)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        telaInicialLayout.setVerticalGroup(
            telaInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaInicialLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addContainerGap(242, Short.MAX_VALUE))
        );

        telaUser.add(telaInicial, "telaInicial");

        jLabel1.setFont(new java.awt.Font("Abyssinica SIL", 3, 15)); // NOI18N
        jLabel1.setText("Escolha um arquivo: ");

        OpenFile.setFont(new java.awt.Font("Abyssinica SIL", 3, 15)); // NOI18N
        OpenFile.setText("Abrir arquivo");
        OpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileActionPerformed(evt);
            }
        });

        uploadFile.setFont(new java.awt.Font("Abyssinica SIL", 3, 15)); // NOI18N
        uploadFile.setText("Upload");
        uploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UploadFilesLayout = new javax.swing.GroupLayout(UploadFiles);
        UploadFiles.setLayout(UploadFilesLayout);
        UploadFilesLayout.setHorizontalGroup(
            UploadFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UploadFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UploadFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(UploadFilesLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(OpenFile))
                    .addComponent(uploadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        UploadFilesLayout.setVerticalGroup(
            UploadFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UploadFilesLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(UploadFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(OpenFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(uploadFile)
                .addContainerGap(277, Short.MAX_VALUE))
        );

        telaUser.add(UploadFiles, "Upload");

        tableDocs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Documento", "Ass.Doc"
            }
        ));
        jScrollPane1.setViewportView(tableDocs);
        if (tableDocs.getColumnModel().getColumnCount() > 0) {
            tableDocs.getColumnModel().getColumn(0).setResizable(false);
            tableDocs.getColumnModel().getColumn(1).setResizable(false);
        }

        downloadDoc.setText("Download");
        downloadDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadDocActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Abyssinica SIL", 3, 12)); // NOI18N
        jLabel13.setText("Documentos Submetidos:");

        javax.swing.GroupLayout DownloadFilesLayout = new javax.swing.GroupLayout(DownloadFiles);
        DownloadFiles.setLayout(DownloadFilesLayout);
        DownloadFilesLayout.setHorizontalGroup(
            DownloadFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DownloadFilesLayout.createSequentialGroup()
                .addGroup(DownloadFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DownloadFilesLayout.createSequentialGroup()
                        .addGroup(DownloadFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DownloadFilesLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(downloadDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DownloadFilesLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel13)))
                        .addGap(0, 313, Short.MAX_VALUE))
                    .addGroup(DownloadFilesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        DownloadFilesLayout.setVerticalGroup(
            DownloadFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DownloadFilesLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(downloadDoc)
                .addGap(14, 14, 14))
        );

        telaUser.add(DownloadFiles, "Download");

        optionsFiles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/book_open.png"))); // NOI18N
        optionsFiles.setText("Arquivos");

        uploadFiles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/database_refresh.png"))); // NOI18N
        uploadFiles.setText("Upload");
        uploadFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadFilesActionPerformed(evt);
            }
        });
        optionsFiles.add(uploadFiles);

        downloadFiles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table_edit.png"))); // NOI18N
        downloadFiles.setText("Download");
        downloadFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadFilesActionPerformed(evt);
            }
        });
        optionsFiles.add(downloadFiles);

        menuPrincipal.add(optionsFiles);

        logout.setText("Sair");

        logoutUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/door_out.png"))); // NOI18N
        logoutUser.setText("Logout");
        logoutUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutUserActionPerformed(evt);
            }
        });
        logout.add(logoutUser);

        menuPrincipal.add(logout);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(telaUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(telaUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutUserActionPerformed
        JOptionPane.showMessageDialog(null, "Logout feito com sucesso!!");
    }//GEN-LAST:event_logoutUserActionPerformed

    /**
     * Método para abrir a tela de upload de arquivos.
     * @param evt 
     */
    private void uploadFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadFilesActionPerformed
        CardLayout cl = (CardLayout) telaUser.getLayout();
        cl.show(telaUser, "Upload");
        chooseFile.setText(null); //limpa o campo do caminho do arquivo.
    }//GEN-LAST:event_uploadFilesActionPerformed

    /**
     * Método de exibição da tela de download de arquivos.
     * @param evt 
     */
    private void downloadFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadFilesActionPerformed
        CardLayout cl = (CardLayout) telaUser.getLayout();
        cl.show(telaUser, "Download");
        control.limpaTabela(tableDocs); //limpa a tabela de documentos para uma possível atualização.
        DefaultTableModel mostrarDocs = (DefaultTableModel) tableDocs.getModel();
        //iterador para percorrer a lista de documentos cadastrados e exibir ao usuário.
        if(ControllerDocumento.getDocs().isEmpty()){
            JOptionPane.showMessageDialog(null, "Nenhum documento submetido.");
        }else{
            for (Iterator<Documento> it = ControllerDocumento.getDocs().iterator(); it.hasNext();) {
                Documento doc = it.next();
                Object[] dados = {doc.getDocumento(), doc.getAssinatura_Documento()};
                mostrarDocs.addRow(dados); //adiciona nova linha na tabela de documentos para download.
            }
        }
    }//GEN-LAST:event_downloadFilesActionPerformed

    /**
     * Método de exibição de tela para escolha de arquivo com o intuito de realizar um upload.
     * @param evt 
     */
    private void OpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileActionPerformed
        JFileChooser  fc = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("files", "pdf", "txt", "png");
        fc.setFileFilter(filter);
        fc.setCurrentDirectory(new java.io.File("../"));
        fc.setDialogTitle("Choose a file");
        if(fc.showOpenDialog(OpenFile) == JFileChooser.APPROVE_OPTION){
            //escreve o caminho do arquivo no campo de texto.
            chooseFile.setText( fc.getSelectedFile().getAbsolutePath() );
        }
    }//GEN-LAST:event_OpenFileActionPerformed

    private void buttonAcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAcessarActionPerformed
        String ass_digital = ass_digitalPessoa.getText();
        String senha = new String ( senhaPessoa.getPassword() ).trim(); //retira possíveis espaços incluidos no campo senha
        String login = ass_digital + ';' + senha;  
        if(ass_digital.isEmpty() || senha.isEmpty()){
            JOptionPane.showMessageDialog(null, "Por favor!! Informe todos os campos.");
        }else{
            //envia os dados de login.
            rede.transmitirDadosCartorio(3,control,login);
            while(true){
                //espera pela confirmação do login
                if(ControllerCartorio.isLoginCartorio().equals("Sucesso-Login")){
                    JOptionPane.showMessageDialog(null, "Login feito com sucesso!!");
                    ControllerCartorio.setLoginCartorio("");
                    //caso o login seja feito com sucesso, sai do loop while e realiza as outras ações.
                    break;
                }
                
                if(ControllerCartorio.isLoginCartorio().equals("Login-Failed")){
                    JOptionPane.showMessageDialog(null, "Não foi encontrado ninguém com esses dados. Verifique novamente!");
                    ControllerCartorio.setLoginCartorio("");
                    //caso o login falhe, então simplemente sai da função e espera por uma nova solicitação.
                    return;
                }
            }          
            
            //realiza a solicitação dos arquivos da pessoa para possíveis downloads.
            rede.transmitirDadosCartorio(5, control, ass_digital);
            //armazena a assinatura digital pessoa para futuras buscas e registros.
            ControllerPessoa.setAssDigitalPessoaLogada(ass_digital); 
            this.setMenuPrincipal(true); //ativa o menu principal
            //exibi a tela inicial
            CardLayout cl = (CardLayout) telaUser.getLayout(); 
            cl.show(telaUser, "telaInicial");
            
            
        }
    }//GEN-LAST:event_buttonAcessarActionPerformed

    private void telaCadastroPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telaCadastroPessoaActionPerformed
        //Limpa todos os campos de textos da tela.
        nomePessoa.setText(null);
        CpfPessoa.setText(null);
        cnpjPessoa.setText(null);
        assDigital.setText(null);
        senha.setText(null);
        CardLayout cl = (CardLayout) telaUser.getLayout(); 
        cl.show(telaUser, "telaCadastro");
    }//GEN-LAST:event_telaCadastroPessoaActionPerformed

    /**
     * Método para o processo de cadastro de pessoa Física. 
     * @param evt 
     */
    private void cadPessoaFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadPessoaFisicaActionPerformed
        //Dados de nome, cpf e assinatura Digital de uma pessoa física.
        String nome = nomePessoa.getText();
        String cpf  = CpfPessoa.getText();
        String assDigitalP = assDigital.getText();
        String senhaP = new String ( senha.getPassword() );
        String dados = nome + ';' + cpf + ';' + senhaP + ';' + assDigitalP;
        if(nome.isEmpty() || cpf.isEmpty() || assDigitalP.isEmpty() || senhaP.isEmpty() ){
            JOptionPane.showMessageDialog(null, "Informe todos dados necessários");
        }else{
            //Verifica se o CPF é válido.
            if(!ValidarCPF.isCPF(cpf)){
                JOptionPane.showMessageDialog(null, "CPF inválido. Informe os dados corretamente!");
            } else {
                rede.transmitirDadosCartorio(2,control,dados);
                while(true){
                    if( ControllerCartorio.getCadSuccessfully().equals("CadSucesso") ){
                        ControllerCartorio.setCadSuccessfully(new String());
                        JOptionPane.showMessageDialog(null, "Cadastro feito com sucesso!");
                        break;//cadastro foi realizado com sucesso.
                    }
                    else if(ControllerCartorio.getCadSuccessfully().equals("CPF-Fail")){
                        ControllerCartorio.setCadSuccessfully(new String());
                        JOptionPane.showMessageDialog(null, "CPF já cadastrado!");
                        break;
                    }
                    else if(ControllerCartorio.getCadSuccessfully().equals("Ass-Fail")){
                        ControllerCartorio.setCadSuccessfully(new String());
                        JOptionPane.showMessageDialog(null, "Ass Digital já cadastrada!");
                        break;
                    }   
                }
            }
        }
    }//GEN-LAST:event_cadPessoaFisicaActionPerformed

    /**
     * Método para o processo de cadastro de pessoa Jurídica.
     * @param evt 
     */
    private void cadPessoaJuridicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadPessoaJuridicaActionPerformed
         //Dados de nome, cpf e assinatura Digital de uma pessoa física.
        String nome = nomePessoa.getText();
        String cnpj  = cnpjPessoa.getText();
        String assDigitalP = assDigital.getText();
        String senhaP = new String ( senha.getPassword() );
        String dados = nome + ';' + cnpj + ';' + senhaP + ';' + assDigitalP;
        if(nome.isEmpty() || cnpj.isEmpty() || assDigitalP.isEmpty() || senhaP.isEmpty() ){
            JOptionPane.showMessageDialog(null, "Informe todos dados necessários");
        }else{
            //Verifica se o CPF é válido.
            if(!ValidarCNPJ.isCNPJ(cnpj)){
                JOptionPane.showMessageDialog(null, "CNPJ inválido. Informe os dados corretamente!");
            } else {
                rede.transmitirDadosCartorio(4,control,dados);
                while(true){
                    if( ControllerCartorio.getCadSuccessfully().equals("CadSucesso") ){
                        ControllerCartorio.setCadSuccessfully(new String());
                        JOptionPane.showMessageDialog(null, "Cadastro feito com sucesso!");
                        break;
                    }
                    else if(ControllerCartorio.getCadSuccessfully().equals("CNPJ-Fail")){
                        ControllerCartorio.setCadSuccessfully(new String());
                        JOptionPane.showMessageDialog(null, "CNPJ já cadastrado!");
                        break;
                    }
                    else if(ControllerCartorio.getCadSuccessfully().equals("Ass-Fail")){
                        ControllerCartorio.setCadSuccessfully(new String());
                        JOptionPane.showMessageDialog(null, "Ass Digital já cadastrada!");
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_cadPessoaJuridicaActionPerformed

    /**
     * Método que abre a tela de login.
     * @param evt 
     */
    private void voltarLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarLoginActionPerformed
        CardLayout cl = (CardLayout) telaUser.getLayout(); 
        cl.show(telaUser, "telaLogin");
    }//GEN-LAST:event_voltarLoginActionPerformed

    /**
     * Método para realização de upload de arquivos.
     * @param evt 
     */
    private void uploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadFileActionPerformed
        Client cliente;
        for(int i = 0 ; i < control.quantCartorio() ; i++){
            boolean teste = true;
            while(teste){
                try {
                    cliente = new Client(control.busca(i).getIp(),control.busca(i).getPorta());
                    cliente.executa();
                    rede.enviarDadoInt(cliente.getCliente(), 1);
                    rede.enviarDadoInt(cliente.getCliente(), 1);
                    ControllerDocumento.sendFile(chooseFile.getText(), cliente.getCliente());
                    cliente.fecharConexão();
                    cliente = new Client(control.busca(i).getIp(),control.busca(i).getPorta());
                    cliente.executa();
                    teste = false;
                } catch (IOException ex) {
                    ex.getMessage();
                }    
            }
        } 
    }//GEN-LAST:event_uploadFileActionPerformed

    /**
     * Método que realiza o download do documento desejado.
     * @param evt 
     */
    private void downloadDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadDocActionPerformed
        //abre janela para escolha da pasta onde o arquivo será armazenado.
        JFileChooser  fc = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("files","pdf", "txt", "png");
        fc.setFileFilter(filter);
        fc.setCurrentDirectory(new java.io.File("../"));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setDialogTitle("Choose a place:");
        if(fc.showOpenDialog(downloadDoc) == JFileChooser.APPROVE_OPTION){
            //System.out.println(fc.getSelectedFile().getAbsolutePath());
            //escolher um documento para realizar o download.
            if(tableDocs.getSelectedRow() != -1){
                String assDoc = tableDocs.getValueAt(tableDocs.getSelectedRow(),1).toString(); //assinatura do documento.
                String nomeDoc   = tableDocs.getValueAt(tableDocs.getSelectedRow(),0).toString(); //nome do documento
                
                ControllerDocumento.setNomeDocToSave(nomeDoc); //nome do arquivo que será salvo.
                ControllerDocumento.setPathToSaveFile(fc.getSelectedFile().getAbsolutePath()); //caminho para salvar o arquivo.
                
                try {
                    //realiza download do documento selecionado na tabela
                    String ipDaMaquina = InetAddress.getLocalHost().getHostAddress();
                    System.out.println(ipDaMaquina);
                    String inRede = servidor.getPorta() + ";" + ipDaMaquina + ";"+ ControllerPessoa.getAssDigitalPessoaLogada() + ";" + nomeDoc;
                    rede.transmitirDadosCartorio(6, control , inRede);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(TelaUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null,"Selecione um documento na tabela!");
            }
        }
    }//GEN-LAST:event_downloadDocActionPerformed

    /**
     * Método para ativar ou desativar o menu principal.
     * @param option
     */
    public void setMenuPrincipal(boolean option){
        menuPrincipal.setVisible(option);
    }
    
    public void conectarComCartorio(){
         control.cadastrar(1880,"127.0.0.1");
         //control.cadastrar(1860,"127.0.0.1");
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
       /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaUsuario().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(TelaUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CpfPessoa;
    private javax.swing.JPanel DownloadFiles;
    private javax.swing.JButton OpenFile;
    private javax.swing.JPanel UploadFiles;
    private javax.swing.JTextField assDigital;
    private javax.swing.JTextField ass_digitalPessoa;
    private javax.swing.JButton buttonAcessar;
    private javax.swing.JButton cadPessoaFisica;
    private javax.swing.JButton cadPessoaJuridica;
    private javax.swing.JTextField chooseFile;
    private javax.swing.JTextField cnpjPessoa;
    private javax.swing.JButton downloadDoc;
    private javax.swing.JMenuItem downloadFiles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu logout;
    private javax.swing.JMenuItem logoutUser;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JTextField nomePessoa;
    private javax.swing.JMenu optionsFiles;
    private javax.swing.JPasswordField senha;
    private javax.swing.JPasswordField senhaPessoa;
    private javax.swing.JTable tableDocs;
    private javax.swing.JPanel telaCadastro;
    private javax.swing.JButton telaCadastroPessoa;
    private javax.swing.JPanel telaInicial;
    private javax.swing.JPanel telaLogin;
    private javax.swing.JPanel telaUser;
    private javax.swing.JButton uploadFile;
    private javax.swing.JMenuItem uploadFiles;
    private javax.swing.JButton voltarLogin;
    // End of variables declaration//GEN-END:variables
}
